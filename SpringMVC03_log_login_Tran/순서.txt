
1. pom.xml - ojdbc6.jar, mybatis, mybatis-spring, commons-dbcp, spring-orm
2. web.xml - servlet-mapping : url-pattern, encodingFilter
3. WEB-INF/spring/sqls/test.sql
4. dto, dao(@Repository), biz(@Service)
5. src/main/resources/sqls/mapper.xml
6. WEB-INF/spring/sqls/config.xml	// 몰아놔도 상관은 없다.
7. src/main/resources/properties/db.properties
8. applicationContext.xml로 마이바티스 연결(db.properties)

------------------------------------------------(AOP)

9. pom.xml - org.aspectj/aspectjweaver, aspectjrt
10. com.hellow.mvc.common.aop/LogAop.java
11. aop-context.xml
12. web.xml
13. src/main/resources/log4j.xml (package 추가, root logger를 trace로 변경)

-------------------------------------------------(filter)

14. pon.xml - commons.lang3
15. com.hellow.mvc.common.filter/LogFilter.java (impl javax.servlet.Filter)
16. web.xml

-------------------------------------------------(login)

17. pom.xml - org.codehaus/jackson-core, jackson-mapper
			- (spring 4.x 이상0 com.faster.xml.jackson/jackson-databind, jackson-core
18. (index.jsp -> controller) login.jsp
19. (ajax -> controller [@ResponseBody], biz, dao, mapper.xml)

-------------------------------------------------(transaction)

20. dao, biz, controller (여기서는 클릭 시 500error가 뜨지만 selectList해보면 insert되어있다.)
	( => 이것은 트랜잭션 특징에 반한다.)
21. applicationContext (DataSourceTransactionManager - bean)
22. servlet-context.xml (<tx:annotation-driven>) + (namespaces tx추가) => aopContext의 *Dao*(...)처럼 쓸 수도 있다.







